#!/bin/bash

ROOT_DIR=/home/kevinyang
GIT_DIR=${ROOT_DIR}/git
LIB_DIR=${ROOT_DIR}/library
BUILD_DIR=${LIB_DIR}/opencv
VERSION=3.3.1

download_opencv_src() {
  cd ${GIT_DIR}
  git clone https://github.com/opencv/opencv.git &&
  git clone https://github.com/opencv/opencv_contrib &&
  cd ${GIT_DIR}/opencv
  git checkout ${VERSION}
  cd ${GIT_DIR}/opencv_contrib
  git checkout ${VERSION}
}

prepare_src_codes() {
	if [[ -d ${BUILD_DIR} ]]; then
		rm -rf ${BUILD_DIR}
	fi
  mkdir ${BUILD_DIR}
	cd ${GIT_DIR}/opencv
	local src_modules=(3rdparty apps cmake data doc include modules platforms samples)
	for module in ${src_modules[@]}; do
		echo "copying opencv/${module}..."
		cp -Rf ${module} ${BUILD_DIR}/${module}
	done

	cp -Rf CMakeLists.txt ${BUILD_DIR}
  cp -Rf LICENSE ${BUILD_DIR}

  if [[ -d ${BUILD_DIR}/contrib ]]; then
		rm -rf ${BUILD_DIR}/contrib
	fi
  mkdir ${BUILD_DIR}/contrib
	cd ${GIT_DIR}/opencv_contrib
	local contrib_modules=(doc modules samples)
	for module in ${contrib_modules[@]}; do
		echo "copying opencv_contrib/${module}..."
		cp -Rf ${module} ${BUILD_DIR}/contrib/${module}/
	done
}

install_dependencies() {
	sudo apt install -y libjpeg8-dev libjasper-dev libpng12-dev &&
		sudo apt install -y libtiff5-dev &&
		sudo apt install -y libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev &&
		sudo apt install -y libxine2-dev libv4l-dev &&
		sudo apt install -y libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev &&
		sudo apt install -y qt5-default libgtk2.0-dev libtbb-dev &&
		sudo apt install -y libatlas-base-dev &&
		sudo apt install -y libfaac-dev libmp3lame-dev libtheora-dev &&
		sudo apt install -y libvorbis-dev libxvidcore-dev &&
		sudo apt install -y libopencore-amrnb-dev libopencore-amrwb-dev &&
		sudo apt install -y x264 v4l-utils &&
		sudo apt install -y python-dev python-pip python3-dev python3-pip &&
		#sudo -H pip2 --proxy 127.0.0.1:8123 install -U pip numpy &&
		#sudo -H pip3 --proxy 127.0.0.1:8123 install -U pip numpy
    sudo -H pip2 install -U pip numpy &&
		sudo -H pip3 install -U pip numpy
}

exec_cmake() {
	cd ${BUILD_DIR}
	if [[ -d build ]]; then
		rm -rf build/
	fi
	mkdir build
	cd build
	cmake -D CMAKE_BUILD_TYPE=RELEASE \
		-D CMAKE_INSTALL_PREFIX=${LIB_DIR}/opencv_release \
		-D INSTALL_C_EXAMPLES=ON \
		-D INSTALL_PYTHON_EXAMPLES=ON \
		-D WITH_TDD=ON \
		-D WITH_V4L=ON \
		-D WITH_QT=ON \
		-D WITH_OPENGL=ON \
		-D OPENCV_EXTRA_MODULES_PATH=${BUILD_DIR}/contrib/modules \
		-D BUILD_EXAMPLES=ON ..
}

exec_make() {
  cd ${BUILD_DIR}/build
  make j8 && sudo make install
}

download_opencv_src
install_dependencies
prepare_src_codes
exec_cmake
